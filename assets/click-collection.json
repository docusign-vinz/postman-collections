{
	"info": {
		"_postman_id": "e11dc269-34af-45fb-b72a-38d5e9c35e9b",
		"name": "Docusign Click API",
		"description": "Docusign Elastic Signing lets you capture consent to standard agreement terms with a single click: terms and conditions, terms of service, terms of use, privacy policies, and more. The Click API lets you include this customizable solution in your Docusign integrations.\n\n**Additional Resources:**\n\n- [Full API Reference](https://developers.docusign.com/docs/web-forms-api/reference/)\n    \n- [Code Examples](https://developers.docusign.com/docs/click-api/how-to/)\n    \n- [Sample Apps showcasing Click API](https://developers.docusign.com/sample-apps/?filter=click)\n    \n- [SDKs](https://developers.docusign.com/docs/click-api/sdks/)\n    \n\n<video src=\"https://youtube.com/embed/YzOkSTL_SSA\" width=\"340\"></video>",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36414416",
		"_collection_link": "https://www.postman.com/docusign/docusign-s-public-workspace/collection/oue1giy/docusign-click-api?action=share&source=collection_link&creator=36414416"
	},
	"item": [
		{
			"name": "Accounts",
			"item": [
				{
					"name": "Provides base service and version access information.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "https://{{hostenv}}/clickapi/service_information",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"service_information"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gets the Clickwraps for an account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps?from_date={{from_date}}&ownerUserId={{ownerUserId}}&page_number={{page_number}}&status={{status}}&to_date={{to_date}}",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps"
							],
							"query": [
								{
									"key": "from_date",
									"value": "{{from_date}}"
								},
								{
									"key": "ownerUserId",
									"value": "{{ownerUserId}}"
								},
								{
									"key": "page_number",
									"value": "{{page_number}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								},
								{
									"key": "to_date",
									"value": "{{to_date}}"
								}
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Creates a Clickwrap for the specified accountId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletes all the clickwraps for an account or the ones passed in query parameter clickwrapIds. It will not delete active clickwraps.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps?clickwrapIds={{clickwrapIds}}",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps"
							],
							"query": [
								{
									"key": "clickwrapIds",
									"value": "{{clickwrapIds}}"
								}
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Gets the clickwrap for an account specified by clickwrapId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Updates the clickwrap specified by clickwrapId",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletes the clickwrap and all its version specified by clickwrapId. Active clickwrap will not get deleted",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}?versions={{versions}}",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}"
							],
							"query": [
								{
									"key": "versions",
									"value": "{{versions}}"
								}
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Checks if a user has agreed to a clickwrap and returns a response with the agreement url. Returns HttpStatusCode.OK if user has no pending agreement.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}/agreements",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}",
								"agreements"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Untitled Request",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}/agreements/{{agreementId}}",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}",
								"agreements",
								"{{agreementId}}"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "agreementId",
									"value": "{{agreementId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Untitled Request",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}/agreements/{{agreementId}}/download",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}",
								"agreements",
								"{{agreementId}}",
								"download"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "agreementId",
									"value": "{{agreementId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Gets the Clickwraps for an account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}/users?client_user_id={{client_user_id}}&from_date={{from_date}}&page_number={{page_number}}&status={{status}}&to_date={{to_date}}",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}",
								"users"
							],
							"query": [
								{
									"key": "client_user_id",
									"value": "{{client_user_id}}"
								},
								{
									"key": "from_date",
									"value": "{{from_date}}"
								},
								{
									"key": "page_number",
									"value": "{{page_number}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								},
								{
									"key": "to_date",
									"value": "{{to_date}}"
								}
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Creates the clickwrap version",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}/versions",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}",
								"versions"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletes the versions specified by query parameter clickwrapVersionIds for a clickwrap, or all versions if no query parameter is specified. It will not delete if a version is active.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}/versions?clickwrapVersionIds={{clickwrapVersionIds}}",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}",
								"versions"
							],
							"query": [
								{
									"key": "clickwrapVersionIds",
									"value": "{{clickwrapVersionIds}}"
								}
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Gets the Clickwrap version by clickwrapId and versionId for an account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}/versions/{{versionId}}",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}",
								"versions",
								"{{versionId}}"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								},
								{
									"key": "versionId",
									"value": "{{versionId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Updates the clickwrap version specified by versionId",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}/versions/{{versionId}}",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}",
								"versions",
								"{{versionId}}"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								},
								{
									"key": "versionId",
									"value": "{{versionId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Clickwrap version specified by versionId",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}/versions/{{versionId}}",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}",
								"versions",
								"{{versionId}}"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								},
								{
									"key": "versionId",
									"value": "{{versionId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Gets the Clickwrap version by clickwrapId and versionNumber for an account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}/versions/{{versionNumber}}",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}",
								"versions",
								"{{versionNumber}}"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								},
								{
									"key": "versionNumber",
									"value": "{{versionNumber}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Updates the clickwrap version specified by versionNumber. Use versionId instead of versionNumber",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}/versions/{{versionNumber}}",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}",
								"versions",
								"{{versionNumber}}"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								},
								{
									"key": "versionNumber",
									"value": "{{versionNumber}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Clickwrap version specified by versionNumber. Use versionId instead of versionNumber",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}/versions/{{versionNumber}}",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}",
								"versions",
								"{{versionNumber}}"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								},
								{
									"key": "versionNumber",
									"value": "{{versionNumber}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Gets the agreement responses for a clickwrap version",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}/versions/{{versionNumber}}/users?client_user_id={{client_user_id}}&from_date={{from_date}}&page_number={{page_number}}&status={{status}}&to_date={{to_date}}",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"clickapi",
								"v1",
								"accounts",
								"{{accountId}}",
								"clickwraps",
								"{{clickwrapId}}",
								"versions",
								"{{versionNumber}}",
								"users"
							],
							"query": [
								{
									"key": "client_user_id",
									"value": "{{client_user_id}}"
								},
								{
									"key": "from_date",
									"value": "{{from_date}}"
								},
								{
									"key": "page_number",
									"value": "{{page_number}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								},
								{
									"key": "to_date",
									"value": "{{to_date}}"
								}
							],
							"variable": [
								{
									"key": "accountId",
									"value": "{{accountId}}"
								},
								{
									"key": "clickwrapId",
									"value": "{{clickwrapId}}"
								},
								{
									"key": "versionNumber",
									"value": "{{versionNumber}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Folder for Accounts"
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "01 Authorize Code Grant Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"accessToken\", jsonData.access_token);",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"refreshToken\", jsonData.refresh_token);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{encodedKeys}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "code",
									"value": "{{codeFromUrl}}"
								},
								{
									"key": "grant_type",
									"value": "authorization_code"
								}
							]
						},
						"url": {
							"raw": "https://{{hostenv}}/oauth/token",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "02 JWT Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"accessToken\", jsonData.access_token);",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"refreshToken\", jsonData.refresh_token);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{encodedKeys}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "assertion",
									"value": "{{assertionHere}}"
								},
								{
									"key": "grant_type",
									"value": "urn:ietf:params:oauth:grant-type:jwt-bearer"
								}
							]
						},
						"url": {
							"raw": "https://{{hostenv}}/oauth/token",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "03 Refresh Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"accessToken\", jsonData.access_token);",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"refreshToken\", jsonData.refresh_token);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{encodedKeys}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "refresh_token",
									"value": "{{refreshToken}}"
								},
								{
									"key": "grant_type",
									"value": "refresh_token"
								}
							]
						},
						"url": {
							"raw": "https://{{hostenv}}/oauth/token",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "04 Get User Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var accounts = jsonData.accounts;",
									"if (jsonData.hasOwnProperty(\"sub\")) { ",
									"    postman.setEnvironmentVariable(\"userId\", jsonData.sub); ",
									"} ",
									"",
									"for (var i=0; i< accounts.length; i++) { ",
									"  if (accounts[i].hasOwnProperty(\"is_default\")) { ",
									"   if (accounts[i].is_default === true) { ",
									"     postman.setEnvironmentVariable(\"accountId\", accounts[i].account_id); ",
									"     postman.setEnvironmentVariable(\"baseUrl\", accounts[i].base_uri + \"/restapi/\"); ",
									"     postman.setEnvironmentVariable(\"accountName\", accounts[i].account_name); ",
									"   } ",
									" } ",
									"} ",
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{hostenv}}/oauth/userinfo",
							"protocol": "https",
							"host": [
								"{{hostenv}}"
							],
							"path": [
								"oauth",
								"userinfo"
							]
						}
					},
					"response": []
				}
			],
			"description": "All Docusign REST APIs use OAuth 2.0 for authenticaiton. [You can find general autnetication information on the Developer Center.](https://developers.docusign.com/platform/auth/)\n\nInformation regarding [Web Forms API specific scopes can be found here](https://developers.docusign.com/docs/click-api/click101/auth/)."
		},
		{
			"name": "Examples",
			"item": [
				{
					"name": "1. Create an Envelope",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"envelopeId\", jsonData.envelopeId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"documents\": [\n    {\n      \"documentBase64\": {{document}},\n      \"documentId\": {{documentId}},\n      \"fileExtension\": \"pdf\",\n      \"name\": \"document\"\n    }\n  ],\n  \"emailSubject\": \"Simple Signing Example\",\n  \"recipients\": {\n    \"signers\": [\n      {\n        \"email\": {{user1}},\n        \"name\": {{user1_name}},\n        \"recipientId\": \"{{recipientId}}\"\n      }\n    ]\n  },\n  \"status\": \"sent\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes"
							]
						},
						"description": "This example is a very basic example of creating an evenlope with a document and a single signer. This evenlope does not specify a tab."
					},
					"response": []
				},
				{
					"name": "2. Create Envelope in Draft Stage",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"documents\": [\n    {\n      \"documentBase64\": {{document}},\n      \"documentId\": \"123\",\n      \"fileExtension\": \"pdf\",\n      \"name\": \"document\"\n    }\n  ],\n  \"emailSubject\": \"Simple Signing Example\",\n  \"recipients\": {\n    \"signers\": [\n      {\n        \"email\": {{user1}},\n        \"name\": {{user1_name}},\n        \"recipientId\": \"{{recipientId}}\"\n      }\n    ]\n  },\n  \"status\": \"created\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes"
							]
						},
						"description": "In this example, we are creating an envelope similar to the previous step. However, we are keeping it in `draft` stage so can continue to make changes to it. If the status was set to `sent` the envelope would be sent to users."
					},
					"response": []
				},
				{
					"name": "3. Get Envelope Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes/{{envelopeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes",
								"{{envelopeId}}"
							]
						},
						"description": "If one needs to check the status of an envelope, they can use this endpoint to retrieve the status."
					},
					"response": []
				},
				{
					"name": "4. Envelope Recipients",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes/{{envelopeId}}/recipients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes",
								"{{envelopeId}}",
								"recipients"
							]
						},
						"description": "In this example, we will list the recipents of an envelope. This endpoint is particularly useful if the envelope is in `draft` stage and we want to make changes to its recipents before sending."
					},
					"response": []
				},
				{
					"name": "5. Add Tab to Envelope",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"signHereTabs\": [{\n        \"anchorString\": \"test\",\n        \"anchorXOffset\": \"1\",\n        \"anchorYOffset\": \"0\",\n        \"anchorIgnoreIfNotPresent\": \"false\",\n        \"anchorUnits\": \"inches\"\n    }]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes/{{envelopeId}}/recipients/{{recipientId}}/tabs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes",
								"{{envelopeId}}",
								"recipients",
								"{{recipientId}}",
								"tabs"
							]
						},
						"description": "In this example, we will modify an evelope and add a tab to a document. This endpoint allows one to modify envelopes after they were created, which is very useful."
					},
					"response": []
				},
				{
					"name": "6. Get Tabs in an Envelope",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes/{{envelopeId}}/recipients/{{recipientId}}/tabs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes",
								"{{envelopeId}}",
								"recipients",
								"{{recipientId}}",
								"tabs"
							]
						},
						"description": "After adding a new tab to the envelope, we can verify the tab was created by listing all the tabs in the envelope."
					},
					"response": []
				},
				{
					"name": "7. Add an Attachment to Envelope",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"attachments\": [{\n        \"attachmentId\": \"123\",\n        \"data\": {{document}},\n        \"name\": \"sample_document\",\n        \"anchorIgnoreIfNotPresent\": \"false\",\n        \"anchorUnits\": \"inches\"\n    }]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes/{{envelopeId}}/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes",
								"{{envelopeId}}",
								"attachments"
							]
						},
						"description": "In this example, we will make further changes to our existing envelope by adding an attachmen to it."
					},
					"response": []
				},
				{
					"name": "8. List Attachments in an Envelope",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes/{{envelopeId}}/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes",
								"{{envelopeId}}",
								"attachments"
							]
						},
						"description": "In this example, we will verify the attachment was added by listing all the attachments in the envelope."
					},
					"response": []
				},
				{
					"name": "9. Lists the Documents in an Envelope",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes/{{envelopeId}}/documents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes",
								"{{envelopeId}}",
								"documents"
							]
						},
						"description": "In this example, we will list all the documents that are included in an envelope."
					},
					"response": []
				},
				{
					"name": "10. Get a Document from Envelope",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes/{{envelopeId}}/documents/{{documentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes",
								"{{envelopeId}}",
								"documents",
								"{{documentId}}"
							]
						},
						"description": "In this example, we will download one document from the envelope. This approach allows one to inspect the document after envelope was created."
					},
					"response": []
				},
				{
					"name": "11. Lock the Envelope",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"lockToken\", jsonData.lockToken);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"lockDurationInSeconds\": \"500\",\n  \"lockType\": \"edit\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes/{{envelopeId}}/lock",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes",
								"{{envelopeId}}",
								"lock"
							]
						},
						"description": "This method locks the specified envelope and sets the time until the lock expires to prevent other users or recipients from changing the envelope.\n\nThe response to this request returns a `lockToken` parameter. You must use the lockToken to update or delete an existing lock. You must also include the `lockToken` in the header for every PUT call that you make on the envelope while it is locked. If you do not include the `lockToken`, the system returns the following error:\n\n```{\n   \"errorCode\": \"EDIT_LOCK_NOT_LOCK_OWNER\",\n   \"message\": \"The user is not the owner of the lock. The template is locked by another user or in another application\"\n}```\n\n`Note`: Users must have envelope locking capability enabled to use this function (userSetting canLockEnvelopes must be set to true for the user)."
					},
					"response": []
				},
				{
					"name": "12. Lists the Existing Locks on an Envelope",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes/{{envelopeId}}/lock",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes",
								"{{envelopeId}}",
								"lock"
							]
						},
						"description": "In this example, we will list all the locks existing on an envelope."
					},
					"response": []
				},
				{
					"name": "13. Delete Existing Lock on an Envelope",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes/{{envelopeId}}/lock",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes",
								"{{envelopeId}}",
								"lock"
							]
						},
						"description": "This example will delete the lock we created on the envelope."
					},
					"response": []
				},
				{
					"name": "14. Created Embedded View",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"returnUrl\": \"http://httpbin.org/get\",\n    \"authenticationMethod\": \"none\",\n    \"email\": {{user1}},\n    \"userName\": {{user1_name}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes/{{envelopeId_draft}}/views/recipient_preview",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes",
								"{{envelopeId_draft}}",
								"views",
								"recipient_preview"
							]
						},
						"description": "In this example, we will create an embedded preview of what our recipients see when the envelope is sent out to them."
					},
					"response": []
				},
				{
					"name": "15. Create an Account Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"templateId\", jsonData.templateId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"documents\": [\n    {\n      \"name\": \"agreement\",\n      \"documentBase64\": {{document}},\n      \"documentId\": {{documentId}},\n      \"fileExtension\": \"pdf\"\n    }\n  ],\n  \"emailBlurb\": \"Email message\",\n  \"emailSubject\": \"email subject\",\n  \"recipients\": {\n    \"signers\": [\n      {\n        \"recipientId\": \"1\",\n        \"roleName\": \"seller\",\n        \"email\":{{user1}},\n        \"name\": {{user1_name}},\n        \"tabs\": {\n          \"signHereTabs\": [\n            {\n              \"documentId\": \"123\",\n              \"pageNumber\": 1,\n              \"xPosition\": \"4\",\n              \"yPosition\": \"4\"\n            }\n          ]\n        }\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"templates"
							]
						},
						"description": "In this example, we will create a template with document, tabs and its recipients specified. This is a great future if we know we will be sending the same envelope multiple times."
					},
					"response": []
				},
				{
					"name": "16. Get Account Templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"templates"
							]
						},
						"description": "We can always see the templates that have been created by listing them. The templates we just created in the previous step is listed here."
					},
					"response": []
				},
				{
					"name": "17. Get Template Definition",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/templates/{{templateId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"templates",
								"{{templateId}}"
							]
						},
						"description": "If one is not sure which template is the one they want to use, they can fetch the template after listing it and verify that it is the one they want to use."
					},
					"response": []
				},
				{
					"name": "18. Send Envelope with Template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"emailBlurb\": \"Create an envelope with a templateId\",\n    \"emailSubject\": \"Template\",\n    \"templateId\": \"{{templateId}}\",\n    \"status\": \"sent\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes"
							]
						},
						"description": "Send an envelop with a single template."
					},
					"response": []
				},
				{
					"name": "19. Create a Template with Role Only",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"templateId\", jsonData.templateId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"documents\": [\n    {\n      \"name\": \"agreement\",\n      \"documentBase64\": {{document}},\n      \"documentId\": {{documentId}},\n      \"fileExtension\": \"pdf\"\n    }\n  ],\n  \"emailBlurb\": \"Email message\",\n  \"emailSubject\": \"email subject\",\n  \"recipients\": {\n    \"signers\": [\n      {\n        \"recipientId\": \"1\",\n        \"roleName\": \"seller\",\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"templates"
							]
						},
						"description": "In order to make templates more board and be able to use them in `CompositeTemplates` we can create them by specifying the role only. This way, the recipients can be specified at envelope creation. This example shows how useful templates can be."
					},
					"response": []
				},
				{
					"name": "20. Send an Envelope Using CompositeTemplates",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"emailBlurb\": \"Create an envelope with a templateId\",\n    \"emailSubject\": \"Template\",\n    \"compositeTemplates\": [\n        {\n            \"serverTemplates\": [\n                {\n                    \"sequence\": \"1\",\n                    \"templateId\": \"{{templateId}}\"\n                }\n            ],\n            \"inlineTemplates\": [\n                {\n                    \"recipients\": {\n                        \"signers\": [\n                            {\n                                \"email\": \"{{user1}}\",\n                                \"name\": \"{{user1_name}}\",\n                                \"recipientId\": \"2\",\n                                \"roleName\": \"seller\",\n                                \"tabs\": {\n                                    \"signHereTabs\": [\n                                        {\n                                            \"anchorString\": \"test\",\n                                            \"anchorUnits\": \"pixels\",\n                                            \"anchorXOffset\": \"200\",\n                                            \"anchorYOffset\": \"10\"\n                                        }\n                                    ]\n                                }\n                            }\n                        ]\n                    },\n                    \"sequence\": \"2\"\n                }\n            ]\n        }\n    ],\n    \"status\": \"sent\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiVersion}}/accounts/{{accountId}}/envelopes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiVersion}}",
								"accounts",
								"{{accountId}}",
								"envelopes"
							]
						},
						"description": "In this example, we will use the template we created in previous step and we will use `CompositeTemplates` to add a signer and a tab to it using `inlineTemplates`. You can see how one can create a template and keep reusing it this way."
					},
					"response": []
				}
			],
			"description": "Folder for Examples"
		},
		{
			"name": "Gets the agreement responses for a clickwrap version",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					}
				],
				"url": {
					"raw": "https://{{hostenv}}/clickapi/v1/accounts/{{accountId}}/clickwraps/{{clickwrapId}}/versions/{{versionId}}/users?client_user_id={{client_user_id}}&from_date={{from_date}}&page_number={{page_number}}&status={{status}}&to_date={{to_date}}",
					"protocol": "https",
					"host": [
						"{{hostenv}}"
					],
					"path": [
						"clickapi",
						"v1",
						"accounts",
						"{{accountId}}",
						"clickwraps",
						"{{clickwrapId}}",
						"versions",
						"{{versionId}}",
						"users"
					],
					"query": [
						{
							"key": "client_user_id",
							"value": "{{client_user_id}}"
						},
						{
							"key": "from_date",
							"value": "{{from_date}}"
						},
						{
							"key": "page_number",
							"value": "{{page_number}}"
						},
						{
							"key": "status",
							"value": "{{status}}"
						},
						{
							"key": "to_date",
							"value": "{{to_date}}"
						}
					],
					"variable": [
						{
							"key": "accountId",
							"value": "{{accountId}}"
						},
						{
							"key": "clickwrapId",
							"value": "{{clickwrapId}}"
						},
						{
							"key": "versionId",
							"value": "{{versionId}}"
						}
					]
				}
			},
			"response": []
		}
	]
}
